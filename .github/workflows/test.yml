name: Testing the GitHub Pages publication

on:
  push:
  workflow_dispatch:


env:
  URL: https://docs.totaldebug.uk/action-sphinx/

jobs:
  basic-publish:
    runs-on: ubuntu-latest
    steps:
    - name: Set the GH Pages branch
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.SPHINX_PAT }} # Need a PAT to switch the branch
        script: |
          await github.repos.updateInformationAboutPagesSite({
            owner: context.repo.owner,
            repo: context.repo.repo,
            source: {
              branch: "gh-pages",
              path: "/"
            }
          })
          await github.repos.requestPagesBuild({
            owner: context.repo.owner,
            repo: context.repo.repo
          })
    - uses: actions/checkout@v2
    - name: Basic run
      uses: ./
      with:
        sphinx_env: development
        build_only: false
        token: ${{ secrets.GITHUB_TOKEN }}

  basic-test:
    runs-on: ubuntu-latest
    needs: [basic-publish, sphinx-src-publish]
    steps:
    - name: Set the GH Pages branch
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.SPHINX_PAT}} # Need a PAT to switch the branch
        script: |
          await github.repos.updateInformationAboutPagesSite({
            owner: context.repo.owner,
            repo: context.repo.repo,
            source: {
              branch: "gh-pages",
              path: "/"
            }
          })
          await github.repos.requestPagesBuild({
            owner: context.repo.owner,
            repo: context.repo.repo
          })
    - uses: actions/checkout@v2
    - name: Get the URL of the rendered site
      id: rendered-site-url
      run: |
        full_url=$(curl -sH "Authorization: token ${AUTH_TOKEN}" \
        "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/pages" | \
        awk -F'"' '/\"html_url\"/ { print $4 }')
        url=$(dirname "${full_url}")
        echo "::set-output name=url::${url}"
      env:
        AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sphinx-src-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Basic run
      uses: ./
      with:
        sphinx_src: sample_site
        target_branch: sphinx_src_test_pages_branch
        sphinx_env: production
        token: ${{ secrets.GITHUB_TOKEN }}
      env:
        SPHINX_DEBUG: true

  sphinx-src-test:
    runs-on: ubuntu-latest
    needs: basic-test
    steps:
    - name: Set the GH Pages branch
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.SPHINX_PAT}} # Need a PAT to switch the branch
        script: |
          await github.repos.updateInformationAboutPagesSite({
            owner: context.repo.owner,
            repo: context.repo.repo,
            source: {
              branch: "sphinx_src_test_pages_branch",
              path: "/"
            }
          })
          await github.repos.requestPagesBuild({
            owner: context.repo.owner,
            repo: context.repo.repo
          })
    - uses: actions/checkout@v2

    - name: Get the URL of the rendered site
      id: rendered-site-url
      run: |
        full_url=$(curl -sH "Authorization: token ${AUTH_TOKEN}" \
        "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/pages" | \
        awk -F'"' '/\"html_url\"/ { print $4 }')
        url=$(dirname "${full_url}")
        echo "::set-output name=url::${url}"
      env:
        AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-only-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Basic run
      uses: ./
      with:
        sphinx_env: development
        build_only: true
        token: ${{ secrets.GITHUB_TOKEN }}

  build-only-test:
    runs-on: ubuntu-latest
    steps:
    - name: Set the GH Pages branch
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.SPHINX_PAT}} # Need a PAT to switch the branch
        script: |
          await github.repos.updateInformationAboutPagesSite({
            owner: context.repo.owner,
            repo: context.repo.repo,
            source: {
              branch: "sphinx_src_test_pages_branch",
              path: "/"
            }
          })
          await github.repos.requestPagesBuild({
            owner: context.repo.owner,
            repo: context.repo.repo
          })
    - uses: actions/checkout@v2
    - name: Get the URL of the rendered site
      id: rendered-site-url
      run: |
        full_url=$(curl -sH "Authorization: token ${AUTH_TOKEN}" \
        "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/pages" | \
        awk -F'"' '/\"html_url\"/ { print $4 }')
        url=$(dirname "${full_url}")
        echo "::set-output name=url::${url}"
      env:
        AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  multiple-versions-slash-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: master
    - name: Run with dest path
      uses: ./
      with:
        target_branch: multiple_versions_test_pages_branch
        target_path: /
        token: ${{ secrets.GITHUB_TOKEN }}

  multiple-versions-current-publish:
    runs-on: ubuntu-latest
    needs: multiple-versions-slash-publish
    steps:
    - uses: actions/checkout@v2
      with:
        ref: master
    - name: Run with dest path
      uses: ./
      with:
        target_branch: multiple_versions_test_pages_branch
        keep_history: true
        target_path: current
        token: ${{ secrets.GITHUB_TOKEN }}

